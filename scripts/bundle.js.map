{"version":3,"sources":["node_modules/browser-pack/_prelude.js","scripts/main.js","scripts/priority-nav-scroller.js"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import PriorityNavScroller from './priority-nav-scroller.js';\n\n// Example\n// const navScrollerLinksLg = PriorityNavScroller({\n//   selector: '.nav-scroller--demo-links-lg'\n// });\n\n// const navScrollerLinksSm = PriorityNavScroller({\n//   selector: '.nav-scroller--demo-links-sm'\n// });\n\n\n\n// Init multiple nav scrollers with the same options\nlet navScrollers = document.querySelectorAll('.nav-scroller');\n\nnavScrollers.forEach((currentValue, currentIndex) => {\n  PriorityNavScroller({\n    selector: currentValue\n  });\n});\n","/**\n  Priority+ horizontal scrolling menu.\n\n  @param {Object} object - Container for all options.\n  @param {string || DOM node} selector - Element selector.\n  @param {string} navSelector - Nav element selector.\n  @param {string} contentSelector - Content element selector.\n  @param {string} itemSelector - Items selector.\n  @param {string} buttonLeftSelector - Left button selector.\n  @param {string} buttonRightSelector - Right button selector.\n  @param {integer} scrollStep - Amount to scroll on button click.\n\n**/\n\n\nconst PriorityNavScroller = function({\n    selector: selector = '.nav-scroller',\n    navSelector: navSelector = '.nav-scroller-nav',\n    contentSelector: contentSelector = '.nav-scroller-content',\n    itemSelector: itemSelector = '.nav-scroller-item',\n    buttonLeftSelector: buttonLeftSelector = '.nav-scroller-btn--left',\n    buttonRightSelector: buttonRightSelector = '.nav-scroller-btn--right',\n    scrollStep: scrollStep = 75\n  } = {}) {\n\n  let navScroller = typeof selector === 'string' ? document.querySelector(selector) : selector;\n\n  if (navScroller === undefined || navScroller === null) {\n    throw new Error('There is something wrong with your selector.');\n    return;\n  }\n\n  let navScrollerNav = navScroller.querySelector(navSelector);\n  let navScrollerContent = navScroller.querySelector(contentSelector);\n  let navScrollerContentItems = navScrollerContent.querySelectorAll(itemSelector);\n  let navScrollerLeft = navScroller.querySelector(buttonLeftSelector);\n  let navScrollerRight = navScroller.querySelector(buttonRightSelector);\n\n  let scrolling = false;\n  let scrollAvailableLeft = 0;\n  let scrollAvailableRight = 0;\n  let scrollingDirection = '';\n  let scrollOverflow = '';\n  let timeout;\n\n\n  // Sets overflow and toggle buttons accordingly\n  const setOverflow = function() {\n    scrollOverflow = getOverflow();\n    toggleButtons(scrollOverflow);\n  }\n\n\n  // Debounce setting the overflow with requestAnimationFrame\n  const requestSetOverflow = function() {\n    if (timeout) window.cancelAnimationFrame(timeout);\n\n    timeout = window.requestAnimationFrame(() => {\n      setOverflow();\n    });\n  }\n\n\n  // Gets the overflow on the nav scroller (left, right or both)\n  const getOverflow = function() {\n    let scrollWidth = navScrollerNav.scrollWidth;\n    let scrollViewport = navScrollerNav.clientWidth;\n    let scrollLeft = navScrollerNav.scrollLeft;\n\n    scrollAvailableLeft = scrollLeft;\n    scrollAvailableRight = scrollWidth - (scrollViewport + scrollLeft);\n\n    let scrollLeftCondition = scrollAvailableLeft > 0;\n    let scrollRightCondition = scrollAvailableRight > 0;\n\n    if (scrollLeftCondition && scrollRightCondition) {\n      return 'both';\n    }\n    else if (scrollLeftCondition) {\n      return 'left';\n    }\n    else if (scrollRightCondition) {\n      return 'right';\n    }\n    else {\n      return 'none';\n    }\n\n  }\n\n\n  // Move the scroller with a transform\n  const moveScroller = function(direction) {\n\n    if (scrolling === true || (scrollOverflow !== direction && scrollOverflow !== 'both')) return;\n\n    let scrollDistance = scrollStep;\n    let scrollAvailable = direction === 'left' ? scrollAvailableLeft : scrollAvailableRight;\n\n    // If there is less that 1.5 steps available then scroll the full way\n    if (scrollAvailable < (scrollStep * 1.5)) {\n      scrollDistance = scrollAvailable;\n    }\n\n    if (direction === 'right') {\n      scrollDistance *= -1;\n    }\n\n    navScrollerContent.classList.remove('no-transition');\n    navScrollerContent.style.transform = 'translateX(' + scrollDistance + 'px)';\n\n    scrollingDirection = direction;\n    scrolling = true;\n  }\n\n\n  // Set the scroller position and removes transform, called after moveScroller()\n  const setScrollerPosition = function() {\n    var style = window.getComputedStyle(navScrollerContent, null);\n    var transform = style.getPropertyValue('transform');\n    var transformValue = Math.abs(parseInt(transform.split(',')[4]) || 0);\n\n    if (scrollingDirection === 'left') {\n      transformValue *= -1;\n    }\n\n    navScrollerContent.classList.add('no-transition');\n    navScrollerContent.style.transform = '';\n    navScrollerNav.scrollLeft = navScrollerNav.scrollLeft + transformValue;\n    navScrollerContent.classList.remove('no-transition');\n\n    scrolling = false;\n  }\n\n\n  // Toggle buttons depending on overflow\n  const toggleButtons = function(overflow) {\n    if (overflow === 'both' || overflow === 'left') {\n      navScrollerLeft.classList.add('active');\n    }\n    else {\n      navScrollerLeft.classList.remove('active');\n    }\n\n    if (overflow === 'both' || overflow === 'right') {\n      navScrollerRight.classList.add('active');\n    }\n    else {\n      navScrollerRight.classList.remove('active');\n    }\n  }\n\n\n  // Init plugin\n  const init = function() {\n    setOverflow();\n\n    window.addEventListener('resize', () => {\n      requestSetOverflow();\n    });\n\n    navScrollerNav.addEventListener('scroll', () => {\n      requestSetOverflow();\n    });\n\n    navScrollerContent.addEventListener('transitionend', () => {\n      setScrollerPosition();\n    });\n\n    navScrollerLeft.addEventListener('click', () => {\n      moveScroller('left');\n    });\n\n    navScrollerRight.addEventListener('click', () => {\n      moveScroller('right');\n    });\n  };\n\n\n  // Init is called by default\n  init();\n\n\n  // Reveal API\n  return {\n    init\n  };\n\n};\n\nexport default PriorityNavScroller;\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzY3JpcHRzL21haW4uanMiLCJzY3JpcHRzL3ByaW9yaXR5LW5hdi1zY3JvbGxlci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0FDQUE7Ozs7OztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7O0FBSUE7QUFDQSxJQUFJLGVBQWUsU0FBUyxnQkFBVCxDQUEwQixlQUExQixDQUFuQjs7QUFFQSxhQUFhLE9BQWIsQ0FBcUIsVUFBQyxZQUFELEVBQWUsWUFBZixFQUFnQztBQUNuRCxxQ0FBb0I7QUFDbEIsY0FBVTtBQURRLEdBQXBCO0FBR0QsQ0FKRDs7Ozs7Ozs7QUNoQkE7Ozs7Ozs7Ozs7Ozs7O0FBZUEsSUFBTSxzQkFBc0IsU0FBdEIsbUJBQXNCLEdBUWxCO0FBQUEsaUZBQUosRUFBSTtBQUFBLDJCQVBOLFFBT007QUFBQSxNQVBJLFFBT0osaUNBUGUsZUFPZjtBQUFBLDhCQU5OLFdBTU07QUFBQSxNQU5PLFdBTVAsb0NBTnFCLG1CQU1yQjtBQUFBLGtDQUxOLGVBS007QUFBQSxNQUxXLGVBS1gsd0NBTDZCLHVCQUs3QjtBQUFBLCtCQUpOLFlBSU07QUFBQSxNQUpRLFlBSVIscUNBSnVCLG9CQUl2QjtBQUFBLG1DQUhOLGtCQUdNO0FBQUEsTUFIYyxrQkFHZCx5Q0FIbUMseUJBR25DO0FBQUEsbUNBRk4sbUJBRU07QUFBQSxNQUZlLG1CQUVmLHlDQUZxQywwQkFFckM7QUFBQSw2QkFETixVQUNNO0FBQUEsTUFETSxVQUNOLG1DQURtQixFQUNuQjs7QUFFUixNQUFJLGNBQWMsT0FBTyxRQUFQLEtBQW9CLFFBQXBCLEdBQStCLFNBQVMsYUFBVCxDQUF1QixRQUF2QixDQUEvQixHQUFrRSxRQUFwRjs7QUFFQSxNQUFJLGdCQUFnQixTQUFoQixJQUE2QixnQkFBZ0IsSUFBakQsRUFBdUQ7QUFDckQsVUFBTSxJQUFJLEtBQUosQ0FBVSw4Q0FBVixDQUFO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RCxHQXRCRDs7QUF5QkE7QUFDQTs7QUFHQTtBQUNBLFNBQU87QUFDTDtBQURLLEdBQVA7QUFJRCxDQTdLRDs7a0JBK0tlLG1CIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKXtmdW5jdGlvbiByKGUsbix0KXtmdW5jdGlvbiBvKGksZil7aWYoIW5baV0pe2lmKCFlW2ldKXt2YXIgYz1cImZ1bmN0aW9uXCI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlO2lmKCFmJiZjKXJldHVybiBjKGksITApO2lmKHUpcmV0dXJuIHUoaSwhMCk7dmFyIGE9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitpK1wiJ1wiKTt0aHJvdyBhLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsYX12YXIgcD1uW2ldPXtleHBvcnRzOnt9fTtlW2ldWzBdLmNhbGwocC5leHBvcnRzLGZ1bmN0aW9uKHIpe3ZhciBuPWVbaV1bMV1bcl07cmV0dXJuIG8obnx8cil9LHAscC5leHBvcnRzLHIsZSxuLHQpfXJldHVybiBuW2ldLmV4cG9ydHN9Zm9yKHZhciB1PVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmUsaT0wO2k8dC5sZW5ndGg7aSsrKW8odFtpXSk7cmV0dXJuIG99cmV0dXJuIHJ9KSgpIiwiaW1wb3J0IFByaW9yaXR5TmF2U2Nyb2xsZXIgZnJvbSAnLi9wcmlvcml0eS1uYXYtc2Nyb2xsZXIuanMnO1xuXG4vLyBFeGFtcGxlXG4vLyBjb25zdCBuYXZTY3JvbGxlckxpbmtzTGcgPSBQcmlvcml0eU5hdlNjcm9sbGVyKHtcbi8vICAgc2VsZWN0b3I6ICcubmF2LXNjcm9sbGVyLS1kZW1vLWxpbmtzLWxnJ1xuLy8gfSk7XG5cbi8vIGNvbnN0IG5hdlNjcm9sbGVyTGlua3NTbSA9IFByaW9yaXR5TmF2U2Nyb2xsZXIoe1xuLy8gICBzZWxlY3RvcjogJy5uYXYtc2Nyb2xsZXItLWRlbW8tbGlua3Mtc20nXG4vLyB9KTtcblxuXG5cbi8vIEluaXQgbXVsdGlwbGUgbmF2IHNjcm9sbGVycyB3aXRoIHRoZSBzYW1lIG9wdGlvbnNcbmxldCBuYXZTY3JvbGxlcnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcubmF2LXNjcm9sbGVyJyk7XG5cbm5hdlNjcm9sbGVycy5mb3JFYWNoKChjdXJyZW50VmFsdWUsIGN1cnJlbnRJbmRleCkgPT4ge1xuICBQcmlvcml0eU5hdlNjcm9sbGVyKHtcbiAgICBzZWxlY3RvcjogY3VycmVudFZhbHVlXG4gIH0pO1xufSk7XG4iLCIvKipcbiAgUHJpb3JpdHkrIGhvcml6b250YWwgc2Nyb2xsaW5nIG1lbnUuXG5cbiAgQHBhcmFtIHtPYmplY3R9IG9iamVjdCAtIENvbnRhaW5lciBmb3IgYWxsIG9wdGlvbnMuXG4gIEBwYXJhbSB7c3RyaW5nIHx8IERPTSBub2RlfSBzZWxlY3RvciAtIEVsZW1lbnQgc2VsZWN0b3IuXG4gIEBwYXJhbSB7c3RyaW5nfSBuYXZTZWxlY3RvciAtIE5hdiBlbGVtZW50IHNlbGVjdG9yLlxuICBAcGFyYW0ge3N0cmluZ30gY29udGVudFNlbGVjdG9yIC0gQ29udGVudCBlbGVtZW50IHNlbGVjdG9yLlxuICBAcGFyYW0ge3N0cmluZ30gaXRlbVNlbGVjdG9yIC0gSXRlbXMgc2VsZWN0b3IuXG4gIEBwYXJhbSB7c3RyaW5nfSBidXR0b25MZWZ0U2VsZWN0b3IgLSBMZWZ0IGJ1dHRvbiBzZWxlY3Rvci5cbiAgQHBhcmFtIHtzdHJpbmd9IGJ1dHRvblJpZ2h0U2VsZWN0b3IgLSBSaWdodCBidXR0b24gc2VsZWN0b3IuXG4gIEBwYXJhbSB7aW50ZWdlcn0gc2Nyb2xsU3RlcCAtIEFtb3VudCB0byBzY3JvbGwgb24gYnV0dG9uIGNsaWNrLlxuXG4qKi9cblxuXG5jb25zdCBQcmlvcml0eU5hdlNjcm9sbGVyID0gZnVuY3Rpb24oe1xuICAgIHNlbGVjdG9yOiBzZWxlY3RvciA9ICcubmF2LXNjcm9sbGVyJyxcbiAgICBuYXZTZWxlY3RvcjogbmF2U2VsZWN0b3IgPSAnLm5hdi1zY3JvbGxlci1uYXYnLFxuICAgIGNvbnRlbnRTZWxlY3RvcjogY29udGVudFNlbGVjdG9yID0gJy5uYXYtc2Nyb2xsZXItY29udGVudCcsXG4gICAgaXRlbVNlbGVjdG9yOiBpdGVtU2VsZWN0b3IgPSAnLm5hdi1zY3JvbGxlci1pdGVtJyxcbiAgICBidXR0b25MZWZ0U2VsZWN0b3I6IGJ1dHRvbkxlZnRTZWxlY3RvciA9ICcubmF2LXNjcm9sbGVyLWJ0bi0tbGVmdCcsXG4gICAgYnV0dG9uUmlnaHRTZWxlY3RvcjogYnV0dG9uUmlnaHRTZWxlY3RvciA9ICcubmF2LXNjcm9sbGVyLWJ0bi0tcmlnaHQnLFxuICAgIHNjcm9sbFN0ZXA6IHNjcm9sbFN0ZXAgPSA3NVxuICB9ID0ge30pIHtcblxuICBsZXQgbmF2U2Nyb2xsZXIgPSB0eXBlb2Ygc2VsZWN0b3IgPT09ICdzdHJpbmcnID8gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihzZWxlY3RvcikgOiBzZWxlY3RvcjtcblxuICBpZiAobmF2U2Nyb2xsZXIgPT09IHVuZGVmaW5lZCB8fCBuYXZTY3JvbGxlciA9PT0gbnVsbCkge1xuICAgIHRocm93IG5ldyBFcnJvcignVGhlcmUgaXMgc29tZXRoaW5nIHdyb25nIHdpdGggeW91ciBzZWxlY3Rvci4nKTtcbiAgICByZXR1cm47XG4gIH1cblxuICBsZXQgbmF2U2Nyb2xsZXJOYXYgPSBuYXZTY3JvbGxlci5xdWVyeVNlbGVjdG9yKG5hdlNlbGVjdG9yKTtcbiAgbGV0IG5hdlNjcm9sbGVyQ29udGVudCA9IG5hdlNjcm9sbGVyLnF1ZXJ5U2VsZWN0b3IoY29udGVudFNlbGVjdG9yKTtcbiAgbGV0IG5hdlNjcm9sbGVyQ29udGVudEl0ZW1zID0gbmF2U2Nyb2xsZXJDb250ZW50LnF1ZXJ5U2VsZWN0b3JBbGwoaXRlbVNlbGVjdG9yKTtcbiAgbGV0IG5hdlNjcm9sbGVyTGVmdCA9IG5hdlNjcm9sbGVyLnF1ZXJ5U2VsZWN0b3IoYnV0dG9uTGVmdFNlbGVjdG9yKTtcbiAgbGV0IG5hdlNjcm9sbGVyUmlnaHQgPSBuYXZTY3JvbGxlci5xdWVyeVNlbGVjdG9yKGJ1dHRvblJpZ2h0U2VsZWN0b3IpO1xuXG4gIGxldCBzY3JvbGxpbmcgPSBmYWxzZTtcbiAgbGV0IHNjcm9sbEF2YWlsYWJsZUxlZnQgPSAwO1xuICBsZXQgc2Nyb2xsQXZhaWxhYmxlUmlnaHQgPSAwO1xuICBsZXQgc2Nyb2xsaW5nRGlyZWN0aW9uID0gJyc7XG4gIGxldCBzY3JvbGxPdmVyZmxvdyA9ICcnO1xuICBsZXQgdGltZW91dDtcblxuXG4gIC8vIFNldHMgb3ZlcmZsb3cgYW5kIHRvZ2dsZSBidXR0b25zIGFjY29yZGluZ2x5XG4gIGNvbnN0IHNldE92ZXJmbG93ID0gZnVuY3Rpb24oKSB7XG4gICAgc2Nyb2xsT3ZlcmZsb3cgPSBnZXRPdmVyZmxvdygpO1xuICAgIHRvZ2dsZUJ1dHRvbnMoc2Nyb2xsT3ZlcmZsb3cpO1xuICB9XG5cblxuICAvLyBEZWJvdW5jZSBzZXR0aW5nIHRoZSBvdmVyZmxvdyB3aXRoIHJlcXVlc3RBbmltYXRpb25GcmFtZVxuICBjb25zdCByZXF1ZXN0U2V0T3ZlcmZsb3cgPSBmdW5jdGlvbigpIHtcbiAgICBpZiAodGltZW91dCkgd2luZG93LmNhbmNlbEFuaW1hdGlvbkZyYW1lKHRpbWVvdXQpO1xuXG4gICAgdGltZW91dCA9IHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUoKCkgPT4ge1xuICAgICAgc2V0T3ZlcmZsb3coKTtcbiAgICB9KTtcbiAgfVxuXG5cbiAgLy8gR2V0cyB0aGUgb3ZlcmZsb3cgb24gdGhlIG5hdiBzY3JvbGxlciAobGVmdCwgcmlnaHQgb3IgYm90aClcbiAgY29uc3QgZ2V0T3ZlcmZsb3cgPSBmdW5jdGlvbigpIHtcbiAgICBsZXQgc2Nyb2xsV2lkdGggPSBuYXZTY3JvbGxlck5hdi5zY3JvbGxXaWR0aDtcbiAgICBsZXQgc2Nyb2xsVmlld3BvcnQgPSBuYXZTY3JvbGxlck5hdi5jbGllbnRXaWR0aDtcbiAgICBsZXQgc2Nyb2xsTGVmdCA9IG5hdlNjcm9sbGVyTmF2LnNjcm9sbExlZnQ7XG5cbiAgICBzY3JvbGxBdmFpbGFibGVMZWZ0ID0gc2Nyb2xsTGVmdDtcbiAgICBzY3JvbGxBdmFpbGFibGVSaWdodCA9IHNjcm9sbFdpZHRoIC0gKHNjcm9sbFZpZXdwb3J0ICsgc2Nyb2xsTGVmdCk7XG5cbiAgICBsZXQgc2Nyb2xsTGVmdENvbmRpdGlvbiA9IHNjcm9sbEF2YWlsYWJsZUxlZnQgPiAwO1xuICAgIGxldCBzY3JvbGxSaWdodENvbmRpdGlvbiA9IHNjcm9sbEF2YWlsYWJsZVJpZ2h0ID4gMDtcblxuICAgIGlmIChzY3JvbGxMZWZ0Q29uZGl0aW9uICYmIHNjcm9sbFJpZ2h0Q29uZGl0aW9uKSB7XG4gICAgICByZXR1cm4gJ2JvdGgnO1xuICAgIH1cbiAgICBlbHNlIGlmIChzY3JvbGxMZWZ0Q29uZGl0aW9uKSB7XG4gICAgICByZXR1cm4gJ2xlZnQnO1xuICAgIH1cbiAgICBlbHNlIGlmIChzY3JvbGxSaWdodENvbmRpdGlvbikge1xuICAgICAgcmV0dXJuICdyaWdodCc7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgcmV0dXJuICdub25lJztcbiAgICB9XG5cbiAgfVxuXG5cbiAgLy8gTW92ZSB0aGUgc2Nyb2xsZXIgd2l0aCBhIHRyYW5zZm9ybVxuICBjb25zdCBtb3ZlU2Nyb2xsZXIgPSBmdW5jdGlvbihkaXJlY3Rpb24pIHtcblxuICAgIGlmIChzY3JvbGxpbmcgPT09IHRydWUgfHwgKHNjcm9sbE92ZXJmbG93ICE9PSBkaXJlY3Rpb24gJiYgc2Nyb2xsT3ZlcmZsb3cgIT09ICdib3RoJykpIHJldHVybjtcblxuICAgIGxldCBzY3JvbGxEaXN0YW5jZSA9IHNjcm9sbFN0ZXA7XG4gICAgbGV0IHNjcm9sbEF2YWlsYWJsZSA9IGRpcmVjdGlvbiA9PT0gJ2xlZnQnID8gc2Nyb2xsQXZhaWxhYmxlTGVmdCA6IHNjcm9sbEF2YWlsYWJsZVJpZ2h0O1xuXG4gICAgLy8gSWYgdGhlcmUgaXMgbGVzcyB0aGF0IDEuNSBzdGVwcyBhdmFpbGFibGUgdGhlbiBzY3JvbGwgdGhlIGZ1bGwgd2F5XG4gICAgaWYgKHNjcm9sbEF2YWlsYWJsZSA8IChzY3JvbGxTdGVwICogMS41KSkge1xuICAgICAgc2Nyb2xsRGlzdGFuY2UgPSBzY3JvbGxBdmFpbGFibGU7XG4gICAgfVxuXG4gICAgaWYgKGRpcmVjdGlvbiA9PT0gJ3JpZ2h0Jykge1xuICAgICAgc2Nyb2xsRGlzdGFuY2UgKj0gLTE7XG4gICAgfVxuXG4gICAgbmF2U2Nyb2xsZXJDb250ZW50LmNsYXNzTGlzdC5yZW1vdmUoJ25vLXRyYW5zaXRpb24nKTtcbiAgICBuYXZTY3JvbGxlckNvbnRlbnQuc3R5bGUudHJhbnNmb3JtID0gJ3RyYW5zbGF0ZVgoJyArIHNjcm9sbERpc3RhbmNlICsgJ3B4KSc7XG5cbiAgICBzY3JvbGxpbmdEaXJlY3Rpb24gPSBkaXJlY3Rpb247XG4gICAgc2Nyb2xsaW5nID0gdHJ1ZTtcbiAgfVxuXG5cbiAgLy8gU2V0IHRoZSBzY3JvbGxlciBwb3NpdGlvbiBhbmQgcmVtb3ZlcyB0cmFuc2Zvcm0sIGNhbGxlZCBhZnRlciBtb3ZlU2Nyb2xsZXIoKVxuICBjb25zdCBzZXRTY3JvbGxlclBvc2l0aW9uID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHN0eWxlID0gd2luZG93LmdldENvbXB1dGVkU3R5bGUobmF2U2Nyb2xsZXJDb250ZW50LCBudWxsKTtcbiAgICB2YXIgdHJhbnNmb3JtID0gc3R5bGUuZ2V0UHJvcGVydHlWYWx1ZSgndHJhbnNmb3JtJyk7XG4gICAgdmFyIHRyYW5zZm9ybVZhbHVlID0gTWF0aC5hYnMocGFyc2VJbnQodHJhbnNmb3JtLnNwbGl0KCcsJylbNF0pIHx8IDApO1xuXG4gICAgaWYgKHNjcm9sbGluZ0RpcmVjdGlvbiA9PT0gJ2xlZnQnKSB7XG4gICAgICB0cmFuc2Zvcm1WYWx1ZSAqPSAtMTtcbiAgICB9XG5cbiAgICBuYXZTY3JvbGxlckNvbnRlbnQuY2xhc3NMaXN0LmFkZCgnbm8tdHJhbnNpdGlvbicpO1xuICAgIG5hdlNjcm9sbGVyQ29udGVudC5zdHlsZS50cmFuc2Zvcm0gPSAnJztcbiAgICBuYXZTY3JvbGxlck5hdi5zY3JvbGxMZWZ0ID0gbmF2U2Nyb2xsZXJOYXYuc2Nyb2xsTGVmdCArIHRyYW5zZm9ybVZhbHVlO1xuICAgIG5hdlNjcm9sbGVyQ29udGVudC5jbGFzc0xpc3QucmVtb3ZlKCduby10cmFuc2l0aW9uJyk7XG5cbiAgICBzY3JvbGxpbmcgPSBmYWxzZTtcbiAgfVxuXG5cbiAgLy8gVG9nZ2xlIGJ1dHRvbnMgZGVwZW5kaW5nIG9uIG92ZXJmbG93XG4gIGNvbnN0IHRvZ2dsZUJ1dHRvbnMgPSBmdW5jdGlvbihvdmVyZmxvdykge1xuICAgIGlmIChvdmVyZmxvdyA9PT0gJ2JvdGgnIHx8IG92ZXJmbG93ID09PSAnbGVmdCcpIHtcbiAgICAgIG5hdlNjcm9sbGVyTGVmdC5jbGFzc0xpc3QuYWRkKCdhY3RpdmUnKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICBuYXZTY3JvbGxlckxlZnQuY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlJyk7XG4gICAgfVxuXG4gICAgaWYgKG92ZXJmbG93ID09PSAnYm90aCcgfHwgb3ZlcmZsb3cgPT09ICdyaWdodCcpIHtcbiAgICAgIG5hdlNjcm9sbGVyUmlnaHQuY2xhc3NMaXN0LmFkZCgnYWN0aXZlJyk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgbmF2U2Nyb2xsZXJSaWdodC5jbGFzc0xpc3QucmVtb3ZlKCdhY3RpdmUnKTtcbiAgICB9XG4gIH1cblxuXG4gIC8vIEluaXQgcGx1Z2luXG4gIGNvbnN0IGluaXQgPSBmdW5jdGlvbigpIHtcbiAgICBzZXRPdmVyZmxvdygpO1xuXG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsICgpID0+IHtcbiAgICAgIHJlcXVlc3RTZXRPdmVyZmxvdygpO1xuICAgIH0pO1xuXG4gICAgbmF2U2Nyb2xsZXJOYXYuYWRkRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgKCkgPT4ge1xuICAgICAgcmVxdWVzdFNldE92ZXJmbG93KCk7XG4gICAgfSk7XG5cbiAgICBuYXZTY3JvbGxlckNvbnRlbnQuYWRkRXZlbnRMaXN0ZW5lcigndHJhbnNpdGlvbmVuZCcsICgpID0+IHtcbiAgICAgIHNldFNjcm9sbGVyUG9zaXRpb24oKTtcbiAgICB9KTtcblxuICAgIG5hdlNjcm9sbGVyTGVmdC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgIG1vdmVTY3JvbGxlcignbGVmdCcpO1xuICAgIH0pO1xuXG4gICAgbmF2U2Nyb2xsZXJSaWdodC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgIG1vdmVTY3JvbGxlcigncmlnaHQnKTtcbiAgICB9KTtcbiAgfTtcblxuXG4gIC8vIEluaXQgaXMgY2FsbGVkIGJ5IGRlZmF1bHRcbiAgaW5pdCgpO1xuXG5cbiAgLy8gUmV2ZWFsIEFQSVxuICByZXR1cm4ge1xuICAgIGluaXRcbiAgfTtcblxufTtcblxuZXhwb3J0IGRlZmF1bHQgUHJpb3JpdHlOYXZTY3JvbGxlcjtcbiJdfQ=="}