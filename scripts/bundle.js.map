{"version":3,"sources":["node_modules/browser-pack/_prelude.js","scripts/main.js","scripts/priority-nav-scroller.js"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import navScroller from './priority-nav-scroller.js';\n\n// Example\nconst navScrollerExample = navScroller({\n\n});\n\n// const navScrollerExample2 = navScroller({\n//   wrapperSelector: '.nav-scroller-wrapper2',\n//   selector: '.nav-scroller2',\n//   contentSelector: '.nav-scroller-content2'\n// });\n\n// const navScrollerExample3 = navScroller({\n//   wrapperSelector: '.nav-scroller-wrapper3',\n//   selector: '.nav-scroller3',\n//   contentSelector: '.nav-scroller-content3'\n// });\n","/**\n  Horizontal scrolling menu.\n\n  @param {Object} object - Container for all options.\n  @param {string || DOM node} wrapperSelector - Container element selector.\n  @param {string} selector - Scroller element selector.\n  @param {string} contentSelector - Scroller content element selector.\n  @param {string} buttonLeftSelector - Left button selector.\n  @param {string} buttonRightSelector - Right button selector.\n  @param {integer} scrollStep - Amount to scroll on button click.\n\n**/\n\n\nconst navScroller = function({\n    wrapperSelector: wrapperSelector = '.nav-scroller-wrapper',\n    selector: selector = '.nav-scroller',\n    contentSelector: contentSelector = '.nav-scroller-content',\n    buttonLeftSelector: buttonLeftSelector = '.nav-scroller-btn--left',\n    buttonRightSelector: buttonRightSelector = '.nav-scroller-btn--right',\n    scrollStep: scrollStep = 75\n  } = {}) {\n\n  let scrolling = false;\n  let scrollingDirection = '';\n  let scrollOverflow = '';\n  let timeout;\n\n  let navScrollerWrapper;\n\n  if (wrapperSelector.nodeType === 1) {\n    navScrollerWrapper = wrapperSelector;\n  }\n  else {\n    navScrollerWrapper = document.querySelector(wrapperSelector);\n  }\n  if (navScrollerWrapper === undefined || navScrollerWrapper === null) return;\n\n  let navScroller = navScrollerWrapper.querySelector(selector);\n  let navScrollerContent = navScrollerWrapper.querySelector(contentSelector);\n  let navScrollerLeft = navScrollerWrapper.querySelector(buttonLeftSelector);\n  let navScrollerRight = navScrollerWrapper.querySelector(buttonRightSelector);\n\n\n  // Sets overflow\n  const setOverflow = function() {\n    scrollOverflow = getOverflow(navScrollerContent, navScroller);\n    toggleButtons(scrollOverflow);\n  }\n\n\n  // Debounce setting the overflow with requestAnimationFrame\n  const requestSetOverflow = function() {\n    if (timeout) {\n      window.cancelAnimationFrame(timeout);\n    }\n\n    timeout = window.requestAnimationFrame(() => {\n      setOverflow();\n    });\n  }\n\n\n  // Get overflow value on scroller\n  const getOverflow = function(content, container) {\n    let containerMetrics = container.getBoundingClientRect();\n    let containerWidth = containerMetrics.width;\n    let containerMetricsLeft = Math.floor(containerMetrics.left);\n\n    // let contentMetrics = content.getBoundingClientRect();\n    // let contentMetricsRight = Math.floor(contentMetrics.right);\n    // let contentMetricsLeft = Math.floor(contentMetrics.left);\n\n\n    let contentItems = content.querySelectorAll('.nav-scroller-item');\n    let contentMetricsFirst = contentItems[0].getBoundingClientRect();\n    let contentMetricsLast = contentItems[contentItems.length - 1].getBoundingClientRect();\n    let contentMetricsRight = Math.floor(contentMetricsLast.right);\n    let contentMetricsLeft = Math.floor(contentMetricsFirst.left);\n\n    // Offset the values by the left value of the container\n    let offset = containerMetricsLeft;\n    containerMetricsLeft -= offset;\n    contentMetricsRight -= offset + 1; // Due to an off by one bug in iOS\n    contentMetricsLeft -= offset;\n\n    // console.log (containerMetricsLeft, contentMetricsLeft, containerWidth, contentMetricsRight);\n\n    if (containerMetricsLeft > contentMetricsLeft && containerWidth < contentMetricsRight) {\n        return 'both';\n    } else if (contentMetricsLeft < containerMetricsLeft) {\n        return 'left';\n    } else if (contentMetricsRight > containerWidth) {\n        return 'right';\n    } else {\n        return 'none';\n    }\n  }\n\n\n  // Move the scroller with a transform\n  const moveScroller = function(direction) {\n    if (scrolling === true) return;\n\n    setOverflow();\n\n    let scrollDistance = scrollStep;\n    let scrollAvailable;\n\n\n    if (scrollOverflow === direction || scrollOverflow === 'both') {\n\n      if (direction === 'left') {\n        scrollAvailable = navScroller.scrollLeft;\n      }\n\n      if (direction === 'right') {\n        let navScrollerRightEdge = navScroller.getBoundingClientRect().right;\n        let navScrollerContentRightEdge = navScrollerContent.getBoundingClientRect().right;\n\n        scrollAvailable = Math.floor(navScrollerContentRightEdge - navScrollerRightEdge);\n      }\n\n      // If there is less that 1.5 steps available then scroll the full way\n      if (scrollAvailable < (scrollStep * 1.5)) {\n        scrollDistance = scrollAvailable;\n      }\n\n      if (direction === 'right') {\n        scrollDistance *= -1;\n      }\n\n      navScrollerContent.classList.remove('no-transition');\n      navScrollerContent.style.transform = 'translateX(' + scrollDistance + 'px)';\n\n      scrollingDirection = direction;\n      scrolling = true;\n    }\n\n  }\n\n\n  // Set the scroller position and removes transform, called after moveScroller()\n  const setScrollerPosition = function() {\n    var style = window.getComputedStyle(navScrollerContent, null);\n    var transform = style.getPropertyValue('transform');\n    var transformValue = Math.abs(parseInt(transform.split(',')[4]) || 0);\n\n    if (scrollingDirection === 'left') {\n      transformValue *= -1;\n    }\n\n    navScrollerContent.classList.add('no-transition');\n    navScrollerContent.style.transform = '';\n    navScroller.scrollLeft = navScroller.scrollLeft + transformValue;\n    navScrollerContent.classList.remove('no-transition');\n\n    scrolling = false;\n  }\n\n\n  // Toggle buttons depending on overflow\n  const toggleButtons = function(overflow) {\n    navScrollerLeft.classList.remove('active');\n    navScrollerRight.classList.remove('active');\n\n    if (overflow === 'both' || overflow === 'left') {\n      navScrollerLeft.classList.add('active');\n    }\n\n    if (overflow === 'both' || overflow === 'right') {\n      navScrollerRight.classList.add('active');\n    }\n  }\n\n\n  const init = function() {\n\n    // Determine scroll overflow\n    setOverflow();\n\n    // Scroll listener\n    navScroller.addEventListener('scroll', () => {\n      requestSetOverflow();\n    });\n\n    // Resize listener\n    window.addEventListener('resize', () => {\n      requestSetOverflow();\n    });\n\n    // Button listeners\n    navScrollerLeft.addEventListener('click', () => {\n      moveScroller('left');\n    });\n\n    navScrollerRight.addEventListener('click', () => {\n      moveScroller('right');\n    });\n\n    // Set scroller position\n    navScrollerContent.addEventListener('transitionend', () => {\n      setScrollerPosition();\n    });\n\n  };\n\n  // Init is called by default\n  init();\n\n\n  // Reveal API\n  return {\n    init\n  };\n\n};\n\nexport default navScroller;\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}