{"version":3,"sources":["node_modules/browser-pack/_prelude.js","scripts/main.js","scripts/priority-nav-scroller.js"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import priorityNavScroller from './priority-nav-scroller.js';\n\n// Example\nconst navScrollerLinksLg = priorityNavScroller({\n  selector: '.nav-scroller--demo-links-lg'\n});\n\n// const navScrollerLinksSm = priorityNavScroller({\n//   selector: '.nav-scroller--demo-links-sm'\n// });\n\n\n\n// Init multiple nav scrollers with the same options\n// let navScrollers = document.querySelectorAll('.nav-scroller');\n\n// navScrollers.forEach((currentValue, currentIndex) => {\n//   priorityNavScroller({\n//     selector: currentValue\n//   });\n// });\n","/**\n  Horizontal scrolling menu.\n\n  @param {Object} object - Container for all options.\n  @param {string || DOM node} selector - Element selector.\n  @param {string} navSelector - Nav element selector.\n  @param {string} contentSelector - Content element selector.\n  @param {string} itemSelector - Item elements selector.\n  @param {string} buttonLeftSelector - Left button selector.\n  @param {string} buttonRightSelector - Right button selector.\n  @param {integer} scrollStep - Amount to scroll on button click.\n\n**/\n\n\nconst priorityNavScroller = function({\n    selector: selector = '.nav-scroller',\n    navSelector: navSelector = '.nav-scroller-nav',\n    contentSelector: contentSelector = '.nav-scroller-content',\n    itemSelector: itemSelector = '.nav-scroller-item',\n    buttonLeftSelector: buttonLeftSelector = '.nav-scroller-btn--left',\n    buttonRightSelector: buttonRightSelector = '.nav-scroller-btn--right',\n    scrollStep: scrollStep = 75\n  } = {}) {\n\n  let navScroller = typeof selector === 'string' ? document.querySelector(selector) : selector;\n\n  if (navScroller === undefined || navScroller === null) {\n    throw new Error('There is something wrong with your selector.');\n    return;\n  }\n\n  let navScrollerNav = navScroller.querySelector(navSelector);\n  let navScrollerContent = navScroller.querySelector(contentSelector);\n  let navScrollerContentItems = navScrollerContent.querySelectorAll(itemSelector);\n  let navScrollerLeft = navScroller.querySelector(buttonLeftSelector);\n  let navScrollerRight = navScroller.querySelector(buttonRightSelector);\n\n  let scrolling = false;\n  let scrollAvailableLeft = 0;\n  let scrollAvailableRight = 0;\n  let scrollingDirection = '';\n  let scrollOverflow = '';\n  let timeout;\n\n  let intersectionOptions = {\n    root: navScrollerNav, // relative to document viewport\n    rootMargin: '0px', // margin around root. Values are similar to css property. Unitless values not allowed\n    threshold: 1.0 // visible amount of item shown in relation to root\n  };\n\n  let observer = new IntersectionObserver(interectionChange, intersectionOptions);\n\n\n  // Sets overflow and toggle buttons accordingly\n  const setOverflow = function() {\n    scrollOverflow = getOverflow();\n    toggleButtons(scrollOverflow);\n    console.log(scrollOverflow);\n  }\n\n\n  function interectionChange(changes, observer) {\n    changes.forEach(change => {\n      setOverflow();\n\n      if (change.intersectionRatio > 0) {\n        console.log('overlap');\n        setOverflow();\n      }\n    });\n  }\n\n  observer.observe(navScrollerContentItems[0]);\n  observer.observe(navScrollerContentItems[navScrollerContentItems.length - 1]);\n\n\n  // Debounce setting the overflow with requestAnimationFrame\n  const requestSetOverflow = function() {\n    if (timeout) {\n      window.cancelAnimationFrame(timeout);\n    }\n\n    timeout = window.requestAnimationFrame(() => {\n      setOverflow();\n    });\n  }\n\n\n  // Gets the overflow on the nav scroller (left, right or both)\n  const getOverflow = function() {\n    let scrollWidth = navScrollerNav.scrollWidth;\n    let scrollViewport = navScrollerNav.clientWidth;\n    let scrollLeft = navScrollerNav.scrollLeft;\n\n    scrollAvailableLeft = scrollLeft;\n    scrollAvailableRight = scrollWidth - (scrollViewport + scrollLeft);\n\n    let scrollLeftCondition = scrollAvailableLeft > 0;\n    let scrollRightCondition = scrollAvailableRight > 0;\n\n    // console.log(scrollWidth, scrollViewport, scrollLeft, scrollAvailableLeft, scrollAvailableRight);\n\n    if (scrollLeftCondition && scrollRightCondition) {\n      return 'both';\n    }\n    else if (scrollLeftCondition) {\n      return 'left';\n    }\n    else if (scrollRightCondition) {\n      return 'right';\n    }\n    else {\n      return 'none';\n    }\n\n  }\n\n\n  // Move the scroller with a transform\n  const moveScroller = function(direction) {\n\n    if (scrolling === true || (scrollOverflow !== direction && scrollOverflow !== 'both')) return;\n\n    let scrollDistance = scrollStep;\n    let scrollAvailable = direction === 'left' ? scrollAvailableLeft : scrollAvailableRight;\n\n    // If there is less that 1.5 steps available then scroll the full way\n    if (scrollAvailable < (scrollStep * 1.5)) {\n      scrollDistance = scrollAvailable;\n    }\n\n    if (direction === 'right') {\n      scrollDistance *= -1;\n    }\n\n    navScrollerContent.classList.remove('no-transition');\n    navScrollerContent.style.transform = 'translateX(' + scrollDistance + 'px)';\n\n    scrollingDirection = direction;\n    scrolling = true;\n  }\n\n\n  // Set the scroller position and removes transform, called after moveScroller()\n  const setScrollerPosition = function() {\n    var style = window.getComputedStyle(navScrollerContent, null);\n    var transform = style.getPropertyValue('transform');\n    var transformValue = Math.abs(parseInt(transform.split(',')[4]) || 0);\n\n    if (scrollingDirection === 'left') {\n      transformValue *= -1;\n    }\n\n    navScrollerContent.classList.add('no-transition');\n    navScrollerContent.style.transform = '';\n    navScrollerNav.scrollLeft = navScrollerNav.scrollLeft + transformValue;\n    navScrollerContent.classList.remove('no-transition');\n\n    scrolling = false;\n  }\n\n\n  // Toggle buttons depending on overflow\n  const toggleButtons = function(overflow) {\n    navScrollerLeft.classList.remove('active');\n    navScrollerRight.classList.remove('active');\n\n    if (overflow === 'both' || overflow === 'left') {\n      navScrollerLeft.classList.add('active');\n    }\n\n    if (overflow === 'both' || overflow === 'right') {\n      navScrollerRight.classList.add('active');\n    }\n  }\n\n\n  const init = function() {\n\n    // Determine scroll overflow\n    setOverflow();\n\n    // // Resize listener\n    // window.addEventListener('resize', () => {\n    //   requestSetOverflow();\n    // });\n\n    // // Scroll listener\n    // navScrollerNav.addEventListener('scroll', () => {\n    //   requestSetOverflow();\n    // });\n\n    // Set scroller position\n    navScrollerContent.addEventListener('transitionend', () => {\n      setScrollerPosition();\n    });\n\n    // Button listeners\n    navScrollerLeft.addEventListener('click', () => {\n      moveScroller('left');\n    });\n\n    navScrollerRight.addEventListener('click', () => {\n      moveScroller('right');\n    });\n\n  };\n\n\n  // Init is called by default\n  init();\n\n\n  // Reveal API\n  return {\n    init\n  };\n\n};\n\nexport default priorityNavScroller;\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}